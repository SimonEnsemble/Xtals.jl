name: Build

on:
  push: # run on push to master
    branches: [ master ]
  pull_request: # run on PR against master
    branches: [ master ]
  workflow_dispatch: # run on button-press in Actions tab

concurrency: # only allow the most recent workflow to execute
  group: 'Xtals'
  cancel-in-progress: true

env: # environment variables
  julia_version: '1.7.1' # julia version to use on all runners (except cross-platform)



jobs: # run in parallel within workflow


  unit-and-doc-tests:
    runs-on: ubuntu-latest

    steps: # run in series within job
      - name: checkout commit
        uses: actions/checkout@master

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      
      - name: build package
        uses: julia-actions/julia-buildpkg@latest

      - name: install dependencies
        run: julia --project --color=yes -e 'import Pkg; Pkg.add.(["Documenter", "Coverage"])'

      - name: test # run the unit tests
        run: julia --project --color=yes --code-coverage -e 'import Pkg; Pkg.test(coverage=true)'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      
      - name: process test coverage
        uses: julia-actions/julia-processcoverage@v1

      - name: upload coverage report
        uses: codecov/codecov-action@v2
        with:
          verbose: true


  cross-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        julia: ['1.1.1', '1.2.0', '1.3.1', '1.4.2', '1.5.4', '1.6.4', '1.7.0']
    
    steps:
      - name: checkout commit
        uses: actions/checkout@master

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia }}
      
      - name: build package
        uses: julia-actions/julia-buildpkg@latest
      
      - name: install dependencies
        run: julia --project --color=yes -e 'import Pkg; Pkg.add("Documenter")'
        shell: bash
      
      - name: run tests
        run: julia --project --color=yes -e 'import Pkg; Pkg.test()'
        shell: bash
          

  porousmaterials: # cross-test PorousMaterials for breaking changes
    needs: unit-and-doc-tests

    runs-on: ubuntu-latest

    continue-on-error: true # if this job fails, CI will still pass (but we will know about a compatibility issue)

    steps:
      - name: check out commit
        uses: actions/checkout@v2

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}

      - name: test # use the cross_dep.jl script to run unit/doc tests on the dev branch of the specified package
        run: julia --project --color=yes ./test/cross_dep.jl PorousMaterials


  porematmod:
    needs: unit-and-doc-tests

    runs-on: ubuntu-latest

    continue-on-error: true

    steps:
      - name: checkout commit
        uses: actions/checkout@v2

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}

      - name: test
        run: julia --project --color=yes ./test/cross_dep.jl PoreMatMod


  xtalspytools:
    needs: unit-and-doc-tests

    runs-on: ubuntu-latest

    continue-on-error: true
    
    steps:
      - name: checkout commit
        uses: actions/checkout@v2

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      
      - name: set up python dependencies
        run: |
          wget https://raw.githubusercontent.com/SimonEnsemble/XtalsPyTools.jl/master/quick_setup.jl
          julia --project --color=yes ./quick_setup.jl

      - name: test
        run: julia --project --color=yes ./test/cross_dep.jl XtalsPyTools
          

  deploy-docs:
    needs: unit-and-doc-tests

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      DOCUMENTER_KEY: ${{secrets.DOCUMENTER_KEY}}

    steps:
      - name: checkout commit
        uses: actions/checkout@v2

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}

      - name: build package
        uses: julia-actions/julia-buildpkg@latest

      - name: install dependencies
        run:  julia --project --color=yes -e 'import Pkg; Pkg.add.(["Documenter", "XtalsPyTools"])'

      - name: build and deploy docs
        run:  julia --project --color=yes ./docs/make.jl
