name: Build

on:
  push: # run on push to master
    branches: [ master ]
  pull_request: # run on PR against master
    branches: [ master ]
  workflow_dispatch: # run on button-press in Actions tab

concurrency: # only allow the most recent workflow to execute
  group: 'Xtals'
  cancel-in-progress: true

env: # environment variables
  julia_version: '1.6.3' # julia version to use on all runners

jobs: # run in parallel within workflow


  unit-tests: # test package building w/o optional feature Python dependencies
    runs-on: ubuntu-latest
    steps: # run in series within job
      - uses: actions/checkout@v2 # check out the code
      - uses: julia-actions/setup-julia@latest # set up Julia
        with:
          version: ${{env.julia_version}}
      - uses: julia-actions/julia-buildpkg@latest # build the package
      - name: test # run the unit tests
        run: julia --project -e 'cd("test"); include("unit_tests.jl")'


  doc-tests: # run doctests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      - uses: julia-actions/julia-buildpkg@latest # build the package
      - name: test
        run: julia --project -e 'cd("test"); include("doc_tests.jl")'
          

  porousmaterials: # cross-test PorousMaterials for breaking changes
    needs: unit-tests
    runs-on: ubuntu-latest
    continue-on-error: true # if this job fails, CI will still pass (but we will know about a compatibility issue)
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      - name: test # use the cross_dep.jl script to run unit/doc tests on the dev branch of the specified package
        run: julia --project ./test/cross_dep.jl PorousMaterials


  porematmod:
    needs: unit-tests
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      - name: test
        run: julia --project ./test/cross_dep.jl PoreMatMod


  xtalspytools:
    needs: unit-tests
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      - name: test
        run: julia --project ./test/cross_dep.jl XtalsPyTools
          

  deploy-docs:
    needs: [unit-tests, doc-tests]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      DOCUMENTER_KEY: ${{secrets.DOCUMENTER_KEY}}
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      - uses: julia-actions/julia-buildpkg@latest
      - name: build and deploy docs
        run: |
          julia --project -e 'import Pkg; Pkg.add("Documenter")'
          julia --project ./docs/make.jl
